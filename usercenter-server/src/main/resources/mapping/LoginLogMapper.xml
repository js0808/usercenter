<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.org.bjca.footstone.usercenter.dao.mapper.LoginLogMapper">
  <resultMap id="BaseResultMap" type="cn.org.bjca.footstone.usercenter.dao.model.LoginLog">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="account_type" jdbcType="VARCHAR" property="accountType" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="user_type" jdbcType="VARCHAR" property="userType" />
    <result column="client_info" jdbcType="VARCHAR" property="clientInfo" />
    <result column="login_result" jdbcType="BIT" property="loginResult" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, account_type, account, uid, user_type, client_info, login_result, create_time
  </sql>
  <select id="selectByExample" parameterType="cn.org.bjca.footstone.usercenter.dao.model.LoginLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from login_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="offset != null and limit != null">
      limit ${offset}, ${limit}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from login_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from login_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.org.bjca.footstone.usercenter.dao.model.LoginLogExample">
    delete from login_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.org.bjca.footstone.usercenter.dao.model.LoginLog">
    insert into login_log (id, account_type, account, 
      uid, user_type, client_info, 
      login_result, create_time)
    values (#{id,jdbcType=INTEGER}, #{accountType,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR}, 
      #{uid,jdbcType=INTEGER}, #{userType,jdbcType=VARCHAR}, #{clientInfo,jdbcType=VARCHAR}, 
      #{loginResult,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.org.bjca.footstone.usercenter.dao.model.LoginLog">
    insert into login_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="accountType != null">
        account_type,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="clientInfo != null">
        client_info,
      </if>
      <if test="loginResult != null">
        login_result,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="accountType != null">
        #{accountType,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=VARCHAR},
      </if>
      <if test="clientInfo != null">
        #{clientInfo,jdbcType=VARCHAR},
      </if>
      <if test="loginResult != null">
        #{loginResult,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.org.bjca.footstone.usercenter.dao.model.LoginLogExample" resultType="java.lang.Long">
    select count(*) from login_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update login_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.accountType != null">
        account_type = #{record.accountType,jdbcType=VARCHAR},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.userType != null">
        user_type = #{record.userType,jdbcType=VARCHAR},
      </if>
      <if test="record.clientInfo != null">
        client_info = #{record.clientInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.loginResult != null">
        login_result = #{record.loginResult,jdbcType=BIT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateSql != null" >
        ${record.updateSql},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update login_log
    set id = #{record.id,jdbcType=INTEGER},
      account_type = #{record.accountType,jdbcType=VARCHAR},
      account = #{record.account,jdbcType=VARCHAR},
      uid = #{record.uid,jdbcType=INTEGER},
      user_type = #{record.userType,jdbcType=VARCHAR},
      client_info = #{record.clientInfo,jdbcType=VARCHAR},
      login_result = #{record.loginResult,jdbcType=BIT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.org.bjca.footstone.usercenter.dao.model.LoginLog">
    update login_log
    <set>
      <if test="accountType != null">
        account_type = #{accountType,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="userType != null">
        user_type = #{userType,jdbcType=VARCHAR},
      </if>
      <if test="clientInfo != null">
        client_info = #{clientInfo,jdbcType=VARCHAR},
      </if>
      <if test="loginResult != null">
        login_result = #{loginResult,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.org.bjca.footstone.usercenter.dao.model.LoginLog">
    update login_log
    set account_type = #{accountType,jdbcType=VARCHAR},
      account = #{account,jdbcType=VARCHAR},
      uid = #{uid,jdbcType=INTEGER},
      user_type = #{userType,jdbcType=VARCHAR},
      client_info = #{clientInfo,jdbcType=VARCHAR},
      login_result = #{loginResult,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="cn.org.bjca.footstone.usercenter.dao.model.LoginLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from login_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="sumByExample" parameterType="cn.org.bjca.footstone.usercenter.dao.model.LoginLogExample" resultType="long" >
    select sum(${sumCol}) from login_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <insert id="batchInsert">
    <if test="items.get(0) != null">
            insert into login_log  (id, account_type, account, 
        uid, user_type, client_info, 
        login_result, create_time)
      values
      <foreach collection="items" item="item" index="index" separator=",">
      (#{item.id,jdbcType=INTEGER}, #{item.accountType,jdbcType=VARCHAR}, #{item.account,jdbcType=VARCHAR}, 
        #{item.uid,jdbcType=INTEGER}, #{item.userType,jdbcType=VARCHAR}, #{item.clientInfo,jdbcType=VARCHAR}, 
        #{item.loginResult,jdbcType=BIT}, #{item.createTime,jdbcType=TIMESTAMP})
      </foreach>
    </if>
  </insert>
</mapper>