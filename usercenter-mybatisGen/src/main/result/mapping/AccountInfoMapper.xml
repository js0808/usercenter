<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.org.bjca.footstone.usercenter.dao.mapper.AccountInfoMapper">
  <resultMap id="BaseResultMap" type="cn.org.bjca.footstone.usercenter.dao.model.AccountInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="account_type" jdbcType="VARCHAR" property="accountType" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="uid" jdbcType="BIGINT" property="uid" />
    <result column="user_type" jdbcType="VARCHAR" property="userType" />
    <result column="ext_field1" jdbcType="VARCHAR" property="extField1" />
    <result column="ext_field2" jdbcType="VARCHAR" property="extField2" />
    <result column="ext_field3" jdbcType="VARCHAR" property="extField3" />
    <result column="ext_field4" jdbcType="VARCHAR" property="extField4" />
    <result column="is_locked" jdbcType="BIT" property="isLocked" />
    <result column="locked_expire_time" jdbcType="TIMESTAMP" property="lockedExpireTime" />
    <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, account_type, account, password, status, uid, user_type, ext_field1, ext_field2, 
    ext_field3, ext_field4, is_locked, locked_expire_time, last_login_time, version, 
    create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="cn.org.bjca.footstone.usercenter.dao.model.AccountInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from account_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="offset != null and limit != null">
      limit ${offset}, ${limit}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from account_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from account_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.org.bjca.footstone.usercenter.dao.model.AccountInfoExample">
    delete from account_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.org.bjca.footstone.usercenter.dao.model.AccountInfo">
    insert into account_info (id, account_type, account, 
      password, status, uid, 
      user_type, ext_field1, ext_field2, 
      ext_field3, ext_field4, is_locked, 
      locked_expire_time, last_login_time, version, 
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{accountType,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{uid,jdbcType=BIGINT}, 
      #{userType,jdbcType=VARCHAR}, #{extField1,jdbcType=VARCHAR}, #{extField2,jdbcType=VARCHAR}, 
      #{extField3,jdbcType=VARCHAR}, #{extField4,jdbcType=VARCHAR}, #{isLocked,jdbcType=BIT}, 
      #{lockedExpireTime,jdbcType=TIMESTAMP}, #{lastLoginTime,jdbcType=TIMESTAMP}, #{version,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.org.bjca.footstone.usercenter.dao.model.AccountInfo">
    insert into account_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="accountType != null">
        account_type,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="extField1 != null">
        ext_field1,
      </if>
      <if test="extField2 != null">
        ext_field2,
      </if>
      <if test="extField3 != null">
        ext_field3,
      </if>
      <if test="extField4 != null">
        ext_field4,
      </if>
      <if test="isLocked != null">
        is_locked,
      </if>
      <if test="lockedExpireTime != null">
        locked_expire_time,
      </if>
      <if test="lastLoginTime != null">
        last_login_time,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="accountType != null">
        #{accountType,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=BIGINT},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=VARCHAR},
      </if>
      <if test="extField1 != null">
        #{extField1,jdbcType=VARCHAR},
      </if>
      <if test="extField2 != null">
        #{extField2,jdbcType=VARCHAR},
      </if>
      <if test="extField3 != null">
        #{extField3,jdbcType=VARCHAR},
      </if>
      <if test="extField4 != null">
        #{extField4,jdbcType=VARCHAR},
      </if>
      <if test="isLocked != null">
        #{isLocked,jdbcType=BIT},
      </if>
      <if test="lockedExpireTime != null">
        #{lockedExpireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.org.bjca.footstone.usercenter.dao.model.AccountInfoExample" resultType="java.lang.Long">
    select count(*) from account_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update account_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.accountType != null">
        account_type = #{record.accountType,jdbcType=VARCHAR},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=BIGINT},
      </if>
      <if test="record.userType != null">
        user_type = #{record.userType,jdbcType=VARCHAR},
      </if>
      <if test="record.extField1 != null">
        ext_field1 = #{record.extField1,jdbcType=VARCHAR},
      </if>
      <if test="record.extField2 != null">
        ext_field2 = #{record.extField2,jdbcType=VARCHAR},
      </if>
      <if test="record.extField3 != null">
        ext_field3 = #{record.extField3,jdbcType=VARCHAR},
      </if>
      <if test="record.extField4 != null">
        ext_field4 = #{record.extField4,jdbcType=VARCHAR},
      </if>
      <if test="record.isLocked != null">
        is_locked = #{record.isLocked,jdbcType=BIT},
      </if>
      <if test="record.lockedExpireTime != null">
        locked_expire_time = #{record.lockedExpireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastLoginTime != null">
        last_login_time = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateSql != null" >
        ${record.updateSql},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update account_info
    set id = #{record.id,jdbcType=INTEGER},
      account_type = #{record.accountType,jdbcType=VARCHAR},
      account = #{record.account,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      uid = #{record.uid,jdbcType=BIGINT},
      user_type = #{record.userType,jdbcType=VARCHAR},
      ext_field1 = #{record.extField1,jdbcType=VARCHAR},
      ext_field2 = #{record.extField2,jdbcType=VARCHAR},
      ext_field3 = #{record.extField3,jdbcType=VARCHAR},
      ext_field4 = #{record.extField4,jdbcType=VARCHAR},
      is_locked = #{record.isLocked,jdbcType=BIT},
      locked_expire_time = #{record.lockedExpireTime,jdbcType=TIMESTAMP},
      last_login_time = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      version = #{record.version,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.org.bjca.footstone.usercenter.dao.model.AccountInfo">
    update account_info
    <set>
      <if test="accountType != null">
        account_type = #{accountType,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=BIGINT},
      </if>
      <if test="userType != null">
        user_type = #{userType,jdbcType=VARCHAR},
      </if>
      <if test="extField1 != null">
        ext_field1 = #{extField1,jdbcType=VARCHAR},
      </if>
      <if test="extField2 != null">
        ext_field2 = #{extField2,jdbcType=VARCHAR},
      </if>
      <if test="extField3 != null">
        ext_field3 = #{extField3,jdbcType=VARCHAR},
      </if>
      <if test="extField4 != null">
        ext_field4 = #{extField4,jdbcType=VARCHAR},
      </if>
      <if test="isLocked != null">
        is_locked = #{isLocked,jdbcType=BIT},
      </if>
      <if test="lockedExpireTime != null">
        locked_expire_time = #{lockedExpireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null">
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.org.bjca.footstone.usercenter.dao.model.AccountInfo">
    update account_info
    set account_type = #{accountType,jdbcType=VARCHAR},
      account = #{account,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      uid = #{uid,jdbcType=BIGINT},
      user_type = #{userType,jdbcType=VARCHAR},
      ext_field1 = #{extField1,jdbcType=VARCHAR},
      ext_field2 = #{extField2,jdbcType=VARCHAR},
      ext_field3 = #{extField3,jdbcType=VARCHAR},
      ext_field4 = #{extField4,jdbcType=VARCHAR},
      is_locked = #{isLocked,jdbcType=BIT},
      locked_expire_time = #{lockedExpireTime,jdbcType=TIMESTAMP},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="cn.org.bjca.footstone.usercenter.dao.model.AccountInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from account_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="sumByExample" parameterType="cn.org.bjca.footstone.usercenter.dao.model.AccountInfoExample" resultType="long" >
    select sum(${sumCol}) from account_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <insert id="batchInsert">
    <if test="items.get(0) != null">
            insert into account_info  (id, account_type, account, 
        password, status, uid, 
        user_type, ext_field1, ext_field2, 
        ext_field3, ext_field4, is_locked, 
        locked_expire_time, last_login_time, version, 
        create_time, update_time)
      values
      <foreach collection="items" item="item" index="index" separator=",">
      (#{item.id,jdbcType=INTEGER}, #{item.accountType,jdbcType=VARCHAR}, #{item.account,jdbcType=VARCHAR}, 
        #{item.password,jdbcType=VARCHAR}, #{item.status,jdbcType=VARCHAR}, #{item.uid,jdbcType=BIGINT}, 
        #{item.userType,jdbcType=VARCHAR}, #{item.extField1,jdbcType=VARCHAR}, #{item.extField2,jdbcType=VARCHAR}, 
        #{item.extField3,jdbcType=VARCHAR}, #{item.extField4,jdbcType=VARCHAR}, #{item.isLocked,jdbcType=BIT}, 
        #{item.lockedExpireTime,jdbcType=TIMESTAMP}, #{item.lastLoginTime,jdbcType=TIMESTAMP}, #{item.version,jdbcType=INTEGER}, 
        #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP})
      </foreach>
    </if>
  </insert>
</mapper>